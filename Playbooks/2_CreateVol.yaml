---
- name: Create host src vol for demo and attch, format 
  hosts: localhost
  gather_facts: true
  collections:
    - purestorage.flasharray
  vars_files:
    - testdrive_vars.yaml
  tasks:
  - name: Get FlashArray information
    purefa_info:
        gather_subset:
        - minimum
        - network
        - interfaces
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
    register: fa1_info

  - name: Create volume for testing
    purefa_volume:
        name: "{{ demo_vol }}"
        size: 100G
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
  
  - name: Get serial number of volume for demo
    purefa_info:
        gather_subset: volumes
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
    register: volumes_data

  - set_fact:
        volume_serial: "{{ volumes_data.purefa_info.volumes[demo_vol].serial }}"

  - name: Create host object on FA1 and attach volume
    purefa_host:
        host: "{{ ansible_hostname }}"
        iqn: "{{ ansible_iscsi_iqn }}"
        volume: "{{ demo_vol }}"
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"

  - name: Force multipath rescan
    command: /usr/sbin/multipath -r
    command: /usr/bin/scsi-rescan

  - name: Get multipath device id for demo volume
    shell:
        cmd: /usr/sbin/multipath -ll |grep -i {{ volume_serial }}| awk '{print $2}'
    register: mpath_dev

  - name: Format demo volume
    filesystem:
        fstype: ext4
        dev: '/dev/{{ mpath_dev.stdout }}'

  - name: Mount the demo volume
    mount:
        path: "{{ src_mount_path }}"
        fstype: ext4
        src: '/dev/{{ mpath_dev.stdout }}'
        state: mounted
...
