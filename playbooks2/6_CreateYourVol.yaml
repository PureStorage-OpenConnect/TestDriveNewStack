---
- name: Create host src vol for demo and attch, format
  hosts: localhost
  gather_facts: true
  collections:
    - purestorage.flasharray
  vars_files:
    - ../resources/testdrive_vars.yaml

  vars_prompt:
    - name: yourvolname
      prompt: "Enter volume name: "
      private: no
    - name: yourvolcapacity
      prompt: "Enter desired capacity. Use G, T, i.e. 100G, 2T: "
      private: no
    - name: yourmountpoint
      prompt: "Where would you like to mount it? i.e. /mnt/myvol: "
      private: no

  tasks:
  - debug:
      msg: 'Creating {{ yourvolname }} with a capacity of {{ yourvolcapacity }}.'

  - name: Get FlashArray information
    purefa_info:
        gather_subset:
        - minimum
        - network
        - interfaces
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
    register: fa1_info

  - name: Create your volume
    purefa_volume:
        name: "{{ yourvolname }}"
        size: "{{ yourvolcapacity }}"
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"

  - name: Get serial number of volume for your volume
    purefa_info:
        gather_subset: volumes
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
    register: volumes_data

  - set_fact:
        volume_serial: "{{ volumes_data.purefa_info.volumes[yourvolname].serial }}"

  - name: Create host object on FA1 and attach your volume
    purefa_host:
        host: "{{ ansible_hostname }}"
        iqn: "{{ ansible_iscsi_iqn }}"
        volume: "{{ yourvolname }}"
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"

  - name: Force multipath rescan
    command: /usr/sbin/multipath -r
  - name: SCSI rescan
    command: /usr/bin/scsi-rescan

  - name: Get multipath device id for your volume
    shell:
        cmd: /usr/sbin/multipath -ll |grep -i {{ volume_serial }}| awk '{print $2}'
    register: mpath_dev

  - name: Format your  volume
    filesystem:
        fstype: ext4
        dev: '/dev/{{ mpath_dev.stdout }}'

  - name: Mount your volume
    mount:
        path: "{{ yourmountpoint }}"
        fstype: ext4
        src: '/dev/{{ mpath_dev.stdout }}'
        state: mounted
  - debug:
      msg: "Mounting {{ yourvolname }} on {{ yourmountpoint }}."
...
