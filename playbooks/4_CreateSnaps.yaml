---
- name: Spin up dev env
  hosts: localhost
  gather_facts: true
  collections:
    - purestorage.flasharray
  vars_files:
    - ../resources/testdrive_vars.yaml
  tasks:
    - name: Get volume information
      purefa_info:
        gather_subset: volumes
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
      register: volumes_data
    - name: Sync FS
      command: /usr/bin/sync

    - set_fact:
        src_serial: "{{ volumes_data.purefa_info.volumes[pod_vol].serial }}"

    - name: Take backup snap
      purefa_snap:
        name: "{{ pod_vol }}"
        suffix: snap
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: present

    - name: Create a R/W clone
      purefa_snap:
        name: "{{ pod_vol }}"
        suffix: snap
        target: "{{ tgt_vol }}"
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: copy

    - name: Overwrite to mounted copy
      purefa_snap:
        name: "{{ pod_vol }}"
        suffix: snap
        target: "{{ tgt_vol }}"
        overwrite: true
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: copy

    - name: Map copy to linux host
      purefa_host:
        host: "{{ ansible_hostname }}"
        volume: "{{ tgt_vol }}"
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"


    - name: Delete and eradicate snapshot dev-snap.snap
      purefa_snap:
         name: "{{ pod_vol }}"
         suffix: snap
         eradicate: true
         fa_url: "{{ fa1_ip }}"
         api_token: "{{ fa1_token }}"
         state: absent

    - name: Get new volume info
      purefa_info:
        gather_subset: volumes
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
      register: volumes_data

    - set_fact:
        tgt_serial: "{{ volumes_data.purefa_info.volumes[tgt_vol].serial }}"

    - debug:
        msg: "Device serial is: {{ tgt_serial }}"

    - name: Force rescan
      command: /usr/sbin/multipath -r
      command: /usr/bin/scsi-rescan

    - name: Get multipath device name
      shell:
        cmd: /usr/sbin/multipath -ll|grep -i {{ tgt_serial }} |awk '{print $2}'
      register: mpath_tgt

    - debug:
        msg: "mpath device name is: {{ mpath_tgt.stdout }}"

    - name: Mount target vol
      mount:
        path: "{{ tgt_mount_path }}"
        fstype: ext4
        src: '/dev/{{ mpath_tgt.stdout }}'
        state: mounted
...
